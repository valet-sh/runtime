---

- hosts: local
  gather_facts: true
  tasks:
    - name: Get stats of the FS object
      ansible.builtin.stat:
        path: /usr/local/valet-sh/etc/ENABLE_NEXT
      register: valet_sh_next_branch_flag_stat

    - name: enable next branch
      when:
        - valet_sh_next_branch_flag_stat.stat.exists|bool
      block:
        - name: checkout 'https://github.com/valet-sh/valet-sh.git' repository
          ansible.builtin.git:
            repo: https://github.com/valet-sh/valet-sh.git
            dest: /usr/local/valet-sh/valet-sh
            update: false

        - name: "Checkout 'next' branch"
          shell: git checkout --force --quiet next
          args:
            chdir: /usr/local/valet-sh/valet-sh/

        - name: pull latest changes
          shell: git pull
          args:
            chdir: /usr/local/valet-sh/valet-sh/

    - name: use stable branch branch
      when:
        - not valet_sh_next_branch_flag_stat.stat.exists|bool
      block:
        - name: "set vars"
          set_fact:
            semver_regex: '^(2)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$'
            valet_sh_release_tag_is_valid: false

        - name: checkout 'https://github.com/valet-sh/valet-sh.git' repository
          ansible.builtin.git:
            repo: https://github.com/valet-sh/valet-sh.git
            dest: /usr/local/valet-sh/valet-sh
            update: false

        - name: fetch latest updates
          shell: git fetch --tags --quiet
          args:
            chdir: /usr/local/valet-sh/valet-sh/

        - name: get current installed release version
          shell: git describe --tags
          args:
            chdir: /usr/local/valet-sh/valet-sh/
          register: valet_sh_current_installed_release

        - name: get list of releases
          shell: git tag --sort "-v:refname" | grep ".*"
          args:
            chdir: /usr/local/valet-sh/valet-sh/
          register: valet_sh_release_tag_list

        - name: Validate valet.sh release tag '{{ valet_sh_release_tag_list_item }}'
          set_fact:
            valet_sh_latest_valid_release_tag: "{{ valet_sh_release_tag_list_item }}"
            valet_sh_release_tag_is_valid: true
          with_items: "{{ valet_sh_release_tag_list.stdout_lines }}"
          loop_control:
            loop_var: valet_sh_release_tag_list_item
          when:
            - valet_sh_release_tag_list_item is match (semver_regex)
            - not valet_sh_release_tag_is_valid|bool

        - fail:
            msg: "FATAL: No valid release found!"
          when: not valet_sh_release_tag_is_valid|bool

        - debug:
            var: valet_sh_latest_valid_release_tag

        - debug:
            var: valet_sh_current_installed_release

        - name: "Checkout Release {{ valet_sh_latest_valid_release_tag }}"
          shell: git checkout --force --quiet "{{ valet_sh_latest_valid_release_tag }}"
          args:
            chdir: /usr/local/valet-sh/valet-sh/
          when: valet_sh_current_installed_release.stdout is version(valet_sh_latest_valid_release_tag, operator='<', version_type="semantic")
